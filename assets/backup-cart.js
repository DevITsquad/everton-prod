class Cart extends HTMLElement{static external_counts=document.querySelectorAll(".cart--external--total-items");static external_icons=document.querySelectorAll(".cart--external--icon");static external_prices=document.querySelectorAll(".cart--external--total-price");static instances=[];constructor(){super()}connectedCallback(){Cart.instances.push(this),this.abort_controllers={},this.checkout_button=this.querySelector(".cart--checkout-button button"),this.dynamic_checkout_buttons=this.querySelector(".cart--additional-buttons"),this.note=this.querySelector(".cart--notes--textarea"),this.eventListeners(),this.toggleLoadingOnSubmit(),this.note&&this.noteTypingListener(),this.dynamic_checkout_buttons&&this.renderDynamicCheckoutButtons()}eventListeners(){this.inputBoxListeners(),this.plusButtonListener(),this.minusButtonListener(),this.removeButtonListener()}toggleLoadingOnSubmit(){this.checkout_button&&this.checkout_button.on("click",()=>this.checkout_button.setAttribute("data-loading",!0))}noteTypingListener(){this.note.on("input",()=>{this.updateNote(this.note.value),Cart.instances.not(this).forEach(t=>t.note.value=this.note.value)})}async updateNote(t){this.abort_controllers.note&&this.abort_controllers.note.abort(),this.abort_controllers.note=new AbortController;try{await fetch(theme.urls.cart+"/update.js",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({note:t}),signal:this.abort_controllers.note.signal})}catch{}}renderDynamicCheckoutButtons(){if(window.location.pathname===theme.urls.cart){const t=theme.off_canvas.right_sidebar.querySelector(".cart--additional-buttons");if(t&&t.remove(),"small"===theme.mqs.current_window){const e=theme.off_canvas.main_content.querySelector('[data-view="desktop"] .cart--additional-buttons');e&&e.remove()}}}inputBoxListeners(){let r;const t=this.querySelectorAll(".cart--quantity--input");t.length&&(t.on("keydown",t=>{var e=t["which"];(e<48||57<e)&&(e<37||40<e)&&8!==e&&9!==e&&t.preventDefault()}),t.on("focusin",async({target:t})=>r=parseInt(t.value)),t.on("focusout",async({target:t})=>{var e=parseInt(t.value),a=t.closest(".cart--item").getAttribute("data-line-num");isNaN(e)||e===r?t.value=r:(t.value=e,this.toggleLoadingDisplay(!1,a),t=await this.updateQuantity(a,e),await Cart.updateAllHtml(),t||this.showQuantityError(a))}))}plusButtonListener(){const t=this.querySelectorAll(".cart--plus");t.length&&t.on("click keydown",t=>{if("keydown"!==t.type||"Enter"===t.key){t.preventDefault();const a=t.target.previousElementSibling;var t=t.target.closest(".cart--item").getAttribute("data-line-num"),e=0<parseInt(a.value)?parseInt(a.value)+1:1;a.value=e,this.toggleLoadingDisplay(!1,t),this.tryToUpdateQuantity(t,e)}})}minusButtonListener(){const t=this.querySelectorAll(".cart--minus");t.length&&t.on("click keydown",t=>{if("keydown"!==t.type||"Enter"===t.key){t.preventDefault();const a=t.target.parentNode.querySelector("input");var e;1!==parseInt(a.value)&&(t=t.target.closest(".cart--item").getAttribute("data-line-num"),e=1<parseInt(a.value)-1?parseInt(a.value)-1:1,a.value=e,this.toggleLoadingDisplay(!1,t),this.tryToUpdateQuantity(t,e))}})}removeButtonListener(){const t=this.querySelectorAll(".cart--item--remove");t.length&&t.on("click",t=>{t.preventDefault();t=t.target.closest(".cart--item").getAttribute("data-line-num");this.toggleLoadingDisplay(!1,t),this.tryToUpdateQuantity(t,0)})}toggleLoadingDisplay(t,e){if(!t&&e){const a=this.querySelector(`.cart--item[data-line-num='${e}'] input`);a&&a.setAttribute("data-loading",!0)}this.checkout_button.setAttribute("data-disabled",!t),this.dynamic_checkout_buttons&&this.dynamic_checkout_buttons.setAttribute("data-disabled",!t)}async tryToUpdateQuantity(t,e){try{var a=await this.updateQuantity(t,e);await Cart.updateAllHtml(),a||0===e||this.showQuantityError(t)}catch{}}showQuantityError(t){const e=this.querySelector(`.cart--item[data-line-num='${t}']`);e&&e.querySelector(".cart--error").removeAttribute("style")}async updateQuantity(t,e){this.abort_controllers.line_num&&this.abort_controllers.line_num.abort(),this.abort_controllers.line_num=new AbortController;const a=this.querySelector(`.cart--item[data-line-num='${t}']`);var r="shopify"===a.getAttribute("data-inventory-management"),n="continue"!==a.getAttribute("data-inventory-policy"),o=parseInt(a.getAttribute("data-inventory-quantity")),r=o<e&&r&&n;r&&(e=o);try{var i=await fetch(theme.urls.cart_change+".js",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({line:t,quantity:e}),signal:this.abort_controllers.line_num.signal});if(i.ok)return Cart.fetchTotals(),!r;throw new Error(i.statusText)}catch{throw new Error("aborted")}}static updateAllHtml(){var t=Cart.instances.map(t=>t.updateHtml());return Promise.allSettled(t)}async updateHtml(){const t=await fetch(theme.urls.cart+"?view=ajax-"+this.dataset.view);var e;if(t.ok)return e=await t.text(),e=theme.utils.parseHtml(e,".cart--form"),this.swapInNewContent(e),this.toggleLoadingDisplay(!0),this.eventListeners(),window.trigger("theme:cart:updated"),!0;throw new Error(t.statusText)}swapInNewContent(t){const e=this.querySelector(".cart--body");var a=t.querySelector(".cart--body"),a=this.swapInImages(e,a);e&&a&&e.replaceWith(a);const r=this.querySelector(".cart--total--price");a=t.querySelector(".cart--total--price");r&&a&&r.replaceWith(a)}swapInImages(a,t){const e=t.querySelectorAll(".cart--item");return 0!==e.length&&(e.forEach(t=>{const e=t.querySelector(".cart--item--image");t=a.querySelector(`[data-variant-id='${t.getAttribute("data-variant-id")}'] .cart--item--image`);t&&e&&e.replaceWith(t)}),t)}static async addItem(t){t=new FormData(t),t=new URLSearchParams(t).toString(),t=await fetch(theme.urls.cart_add+".js",{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded"},body:t});if(t.ok)return Cart.fetchTotals(),!0;throw new Error(t.statusText)}static async fetchTotals(t=!1){const e=await fetch(theme.urls.cart+".js");if(!e.ok)throw new Error(e.statusText);var a=await e.json();Cart.setItems(a.items),t||Cart.updateTotals(a)}static setItems(t){const e={};t.forEach(t=>e[t.id]=t.quantity),localStorage.setItem(theme.local_storage.cart_items,JSON.stringify(e))}static updateTotals({item_count:a,total_price:e}){const{external_counts:t,external_icons:r,external_prices:n,instances:o}=Cart;t.forEach(t=>t.textContent=a),r.forEach(t=>t.setAttribute("data-item-count",a)),n.forEach(t=>t.textContent=theme.utils.formatMoney(e)),o.forEach((t,e)=>{t.setAttribute("data-has-items",0<a),0===a&&(t.note.value="",0===e&&t.updateNote(""))})}}theme.cart=Cart,theme.cart.fetchTotals(!0),customElements.define("cart-root",Cart);